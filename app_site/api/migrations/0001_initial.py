# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-03-21 00:17
from __future__ import unicode_literals

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Catador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=128, verbose_name='Nome')),
                ('slug', models.CharField(blank=True, max_length=141, null=True)),
                ('presentation_phrase', models.CharField(blank=True, max_length=140, null=True, verbose_name='Frase de apresentação')),
                ('minibio', models.TextField(blank=True, null=True)),
                ('catador_type', models.CharField(choices=[('C', 'Catador'), ('O', 'Cooperativa'), ('P', 'Ecoponto')], default='C', max_length=1)),
                ('address_base', models.CharField(blank=True, max_length=500, null=True, verbose_name='Endereço onde costuma trabalhar.')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('address_region', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bairro.')),
                ('region', models.CharField(blank=True, max_length=128, null=True, verbose_name='Região onde costuma trabalhar.')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='Cidade em que trabalha')),
                ('state', models.CharField(blank=True, max_length=128, null=True, verbose_name='Estado')),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('kg_week', models.FloatField(blank=True, null=True, verbose_name='Quantos Kg coleta por semana?')),
                ('works_since', models.DateField(blank=True, null=True)),
                ('nickname', models.CharField(max_length=128, verbose_name='Apelido')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Permite edição Publica')),
                ('has_motor_vehicle', models.BooleanField(default=False, verbose_name='Tem veículo motorizado.')),
                ('has_smartphone_with_internet', models.BooleanField(default=False, verbose_name='Tem smartphone com internet móvel.')),
                ('carroca_pimpada', models.BooleanField(default=False, verbose_name='Teve a Carroça Pimpada?')),
                ('safety_kit', models.BooleanField(default=False, verbose_name='Recebeu o Kit de Segurança?')),
                ('safety_kit_boot', models.BooleanField(default=False, verbose_name='Kit de Segurança: Bota')),
                ('safety_kit_gloves', models.BooleanField(default=False, verbose_name='Kit de Segurança: Luva')),
                ('safety_kit_brakes', models.BooleanField(default=False, verbose_name='Kit de Segurança: Freios')),
                ('safety_kit_reflective_tapes', models.BooleanField(default=False, verbose_name='Kit de Segurança: Fitas refletivas')),
                ('safety_kit_rearview', models.BooleanField(default=False, verbose_name='Kit de Segurança: Retrovisor')),
                ('cooperative_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Participa de cooperativa? Qual?')),
                ('iron_work', models.CharField(blank=True, max_length=200, null=True, verbose_name='Trabalha com qual ferro velho')),
                ('has_family', models.CharField(blank=True, max_length=200, null=True)),
                ('how_many_days_work_week', models.IntegerField(blank=True, help_text='Quantos dias trabalha por semana', null=True)),
                ('how_many_years_work', models.IntegerField(blank=True, help_text='HÁ QUANTOS ANOS COLETA', null=True)),
                ('registered_by_another_user', models.BooleanField(default=False, verbose_name='Cadastrado por outro usuário')),
                ('another_user_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outro usuário - Nome')),
                ('another_user_email', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outro usuário - Email')),
                ('another_user_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Outro usuário - Whatsapp')),
                ('kg_day', models.FloatField(blank=True, null=True, verbose_name='Quantos Kg coleta por dia?')),
                ('year_of_birth', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Catador',
                'verbose_name_plural': 'Catadores',
            },
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('Aberta', 'Aberta'), ('Aceita', 'Aceita'), ('Sucesso', 'Sucesso'), ('Falha', 'Falha'), ('Cancelada', 'Cancelada')], default='Aberta', max_length=16, verbose_name='Estado da Coleta')),
                ('catador_confirms', models.NullBooleanField()),
                ('user_confirms', models.NullBooleanField()),
                ('motivo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Motivo Cancelamento')),
                ('active', models.BooleanField(default=True)),
                ('catador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Catador')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cooperative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phrase', models.CharField(max_length=200)),
                ('how_many_cooperators', models.IntegerField(blank=True, null=True)),
                ('work_since', models.DateField(blank=True, null=True)),
                ('founded_in', models.DateField(blank=True, null=True)),
                ('history', models.TextField(blank=True, null=True)),
                ('address_base', models.CharField(blank=True, max_length=500, null=True, verbose_name='Rua')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('address_region', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bairro')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=128, null=True, verbose_name='Estado')),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralErros',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.TextField(blank=True, null=True)),
                ('object', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Erros no sistema',
                'verbose_name_plural': 'Erros no sistema',
            },
        ),
        migrations.CreateModel(
            name='GeorefCatador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Catador')),
            ],
        ),
        migrations.CreateModel(
            name='GeorefResidue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalCatador',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=128, verbose_name='Nome')),
                ('slug', models.CharField(blank=True, max_length=141, null=True)),
                ('presentation_phrase', models.CharField(blank=True, max_length=140, null=True, verbose_name='Frase de apresentação')),
                ('minibio', models.TextField(blank=True, null=True)),
                ('catador_type', models.CharField(choices=[('C', 'Catador'), ('O', 'Cooperativa'), ('P', 'Ecoponto')], default='C', max_length=1)),
                ('address_base', models.CharField(blank=True, max_length=500, null=True, verbose_name='Endereço onde costuma trabalhar.')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('address_region', models.CharField(blank=True, max_length=128, null=True, verbose_name='Bairro.')),
                ('region', models.CharField(blank=True, max_length=128, null=True, verbose_name='Região onde costuma trabalhar.')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='Cidade em que trabalha')),
                ('state', models.CharField(blank=True, max_length=128, null=True, verbose_name='Estado')),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('kg_week', models.FloatField(blank=True, null=True, verbose_name='Quantos Kg coleta por semana?')),
                ('works_since', models.DateField(blank=True, null=True)),
                ('nickname', models.CharField(max_length=128, verbose_name='Apelido')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Permite edição Publica')),
                ('has_motor_vehicle', models.BooleanField(default=False, verbose_name='Tem veículo motorizado.')),
                ('has_smartphone_with_internet', models.BooleanField(default=False, verbose_name='Tem smartphone com internet móvel.')),
                ('carroca_pimpada', models.BooleanField(default=False, verbose_name='Teve a Carroça Pimpada?')),
                ('safety_kit', models.BooleanField(default=False, verbose_name='Recebeu o Kit de Segurança?')),
                ('safety_kit_boot', models.BooleanField(default=False, verbose_name='Kit de Segurança: Bota')),
                ('safety_kit_gloves', models.BooleanField(default=False, verbose_name='Kit de Segurança: Luva')),
                ('safety_kit_brakes', models.BooleanField(default=False, verbose_name='Kit de Segurança: Freios')),
                ('safety_kit_reflective_tapes', models.BooleanField(default=False, verbose_name='Kit de Segurança: Fitas refletivas')),
                ('safety_kit_rearview', models.BooleanField(default=False, verbose_name='Kit de Segurança: Retrovisor')),
                ('cooperative_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Participa de cooperativa? Qual?')),
                ('iron_work', models.CharField(blank=True, max_length=200, null=True, verbose_name='Trabalha com qual ferro velho')),
                ('has_family', models.CharField(blank=True, max_length=200, null=True)),
                ('how_many_days_work_week', models.IntegerField(blank=True, help_text='Quantos dias trabalha por semana', null=True)),
                ('how_many_years_work', models.IntegerField(blank=True, help_text='HÁ QUANTOS ANOS COLETA', null=True)),
                ('registered_by_another_user', models.BooleanField(default=False, verbose_name='Cadastrado por outro usuário')),
                ('another_user_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outro usuário - Nome')),
                ('another_user_email', models.CharField(blank=True, max_length=200, null=True, verbose_name='Outro usuário - Email')),
                ('another_user_whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Outro usuário - Whatsapp')),
                ('kg_day', models.FloatField(blank=True, null=True, verbose_name='Quantos Kg coleta por dia?')),
                ('year_of_birth', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cooperative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Cooperative')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Catador',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCollect',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('Aberta', 'Aberta'), ('Aceita', 'Aceita'), ('Sucesso', 'Sucesso'), ('Falha', 'Falha'), ('Cancelada', 'Cancelada')], default='Aberta', max_length=16, verbose_name='Estado da Coleta')),
                ('catador_confirms', models.NullBooleanField()),
                ('user_confirms', models.NullBooleanField()),
                ('motivo', models.CharField(blank=True, max_length=140, null=True, verbose_name='Motivo Cancelamento')),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('catador', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Catador')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical collect',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLatitudeLongitude',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reverse_geocoding', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical GeoReferencia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMaterial',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Serviços e Materiais',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMobile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(max_length=20, verbose_name='Telefone Móvel')),
                ('mno', models.CharField(blank=True, choices=[('V', 'Vivo'), ('T', 'TIM'), ('C', 'Claro'), ('O', 'Oi'), ('N', 'Nextel'), ('P', 'Porto Conecta')], max_length=1, null=True, verbose_name='Operadora Móvel')),
                ('has_whatsapp', models.BooleanField(default=False, verbose_name='Usa o WhatsAPP?')),
                ('mobile_internet', models.BooleanField(default=False, verbose_name='Tem acesso a internet móvel?')),
                ('notes', models.CharField(blank=True, max_length=140, null=True, verbose_name='Comentário')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical mobile',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPartner',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical partner',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoBase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fotos de usuários',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoCatador',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('catador', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Catador')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical photo catador',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoCollectCatador',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('coleta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Collect')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical photo collect catador',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoCollectUser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('coleta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Collect')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical photo collect user',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoCooperative',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('cooperative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Cooperative')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical photo cooperative',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhotoResidue',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical photo residue',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRating',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('rating', models.CharField(choices=[('+', 'Positiva'), ('0', 'Neutra'), ('-', 'Negativa')], max_length=1, verbose_name='Avaliação')),
                ('comment', models.CharField(blank=True, max_length=140, verbose_name='Comentário')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Comentário e Avaliação',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRatingCatador',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('catador', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Catador')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rating catador',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRatingCooperative',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cooperative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Cooperative')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rating cooperative',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='LatitudeLongitude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reverse_geocoding', models.CharField(blank=True, default='', max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'GeoReferencia',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Serviços e Materiais',
                'verbose_name_plural': 'Serviços e Materiais',
            },
        ),
        migrations.CreateModel(
            name='Mobile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(max_length=20, verbose_name='Telefone Móvel')),
                ('mno', models.CharField(blank=True, choices=[('V', 'Vivo'), ('T', 'TIM'), ('C', 'Claro'), ('O', 'Oi'), ('N', 'Nextel'), ('P', 'Porto Conecta')], max_length=1, null=True, verbose_name='Operadora Móvel')),
                ('has_whatsapp', models.BooleanField(default=False, verbose_name='Usa o WhatsAPP?')),
                ('mobile_internet', models.BooleanField(default=False, verbose_name='Tem acesso a internet móvel?')),
                ('notes', models.CharField(blank=True, max_length=140, null=True, verbose_name='Comentário')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MobileCatador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Catador')),
                ('mobile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Mobile')),
            ],
        ),
        migrations.CreateModel(
            name='MobileCooperative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cooperative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cooperative')),
                ('mobile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Mobile')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=100)),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to='cooperatives/partners')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhotoBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Primary Point of Interest (PPOI)')),
                ('full_photo', versatileimagefield.fields.VersatileImageField(upload_to=api.models.get_upload_path)),
            ],
            options={
                'verbose_name': 'Fotos de usuários',
                'verbose_name_plural': 'Fotos de usuários',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('rating', models.CharField(choices=[('+', 'Positiva'), ('0', 'Neutra'), ('-', 'Negativa')], max_length=1, verbose_name='Avaliação')),
                ('comment', models.CharField(blank=True, max_length=140, verbose_name='Comentário')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comentário e Avaliação',
                'verbose_name_plural': 'Comentários e Avaliações',
            },
        ),
        migrations.CreateModel(
            name='RatingCatador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('catador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Catador')),
                ('rating', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Rating')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RatingCooperative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('moderation_status', models.CharField(choices=[('A', 'Approved'), ('R', 'Rejected'), ('P', 'Pending')], default='P', help_text='O status "Rejected" não permite que o registro seja mostrado.', max_length=1, verbose_name='Status de Moderação')),
                ('mongo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('cooperative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cooperative')),
                ('rating', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Rating')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Residue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('quantity', models.CharField(choices=[('S', 'SACOLA'), ('CS', 'CARRINHO DE SUPERMERCADO'), ('CR', 'CARROÇA'), ('CM', 'CAMINHÃO')], help_text='Informe a quantidade aproximada', max_length=2, verbose_name='Quantidade')),
                ('active', models.BooleanField(default=True)),
                ('materials', models.ManyToManyField(to='api.Material')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', versatileimagefield.fields.VersatileImageField(upload_to=api.models.get_upload_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoCatador',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.CreateModel(
            name='PhotoCollectCatador',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.CreateModel(
            name='PhotoCollectUser',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.CreateModel(
            name='PhotoCooperative',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.CreateModel(
            name='PhotoResidue',
            fields=[
                ('photobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.PhotoBase')),
                ('residue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Residue')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.photobase',),
        ),
        migrations.AddField(
            model_name='photobase',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalratingcooperative',
            name='rating',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Rating'),
        ),
        migrations.AddField(
            model_name='historicalratingcatador',
            name='rating',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Rating'),
        ),
        migrations.AddField(
            model_name='historicalphotoresidue',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalphotoresidue',
            name='residue',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Residue'),
        ),
        migrations.AddField(
            model_name='historicalphotocooperative',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalphotocollectuser',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalphotocollectcatador',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalphotocatador',
            name='photobase_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PhotoBase'),
        ),
        migrations.AddField(
            model_name='historicalcollect',
            name='residue',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Residue'),
        ),
        migrations.AddField(
            model_name='georefresidue',
            name='georef',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LatitudeLongitude'),
        ),
        migrations.AddField(
            model_name='georefresidue',
            name='residue',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Residue'),
        ),
        migrations.AddField(
            model_name='georefcatador',
            name='georef',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.LatitudeLongitude'),
        ),
        migrations.AddField(
            model_name='cooperative',
            name='materials_collected',
            field=models.ManyToManyField(blank=True, to='api.Material'),
        ),
        migrations.AddField(
            model_name='cooperative',
            name='mobile_m2m',
            field=models.ManyToManyField(blank=True, related_name='cooperatives', through='api.MobileCooperative', to='api.Mobile'),
        ),
        migrations.AddField(
            model_name='cooperative',
            name='partners',
            field=models.ManyToManyField(blank=True, to='api.Partner'),
        ),
        migrations.AddField(
            model_name='cooperative',
            name='rating_m2m',
            field=models.ManyToManyField(blank=True, related_name='cooperatives', through='api.RatingCooperative', to='api.Rating'),
        ),
        migrations.AddField(
            model_name='cooperative',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collect',
            name='residue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Residue'),
        ),
        migrations.AddField(
            model_name='catador',
            name='cooperative',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Cooperative'),
        ),
        migrations.AddField(
            model_name='catador',
            name='georef_m2m',
            field=models.ManyToManyField(blank=True, related_name='catadores', through='api.GeorefCatador', to='api.LatitudeLongitude'),
        ),
        migrations.AddField(
            model_name='catador',
            name='materials_collected',
            field=models.ManyToManyField(blank=True, to='api.Material'),
        ),
        migrations.AddField(
            model_name='catador',
            name='mobile_m2m',
            field=models.ManyToManyField(blank=True, related_name='catadores', through='api.MobileCatador', to='api.Mobile'),
        ),
        migrations.AddField(
            model_name='catador',
            name='rating_m2m',
            field=models.ManyToManyField(blank=True, related_name='catadores', through='api.RatingCatador', to='api.Rating'),
        ),
        migrations.AddField(
            model_name='catador',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='photocooperative',
            name='cooperative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cooperative'),
        ),
        migrations.AddField(
            model_name='photocollectuser',
            name='coleta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Collect'),
        ),
        migrations.AddField(
            model_name='photocollectcatador',
            name='coleta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Collect'),
        ),
        migrations.AddField(
            model_name='photocatador',
            name='catador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Catador'),
        ),
    ]
